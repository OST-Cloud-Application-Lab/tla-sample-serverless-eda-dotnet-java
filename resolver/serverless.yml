org: cldsolgrp09
app: tla-resolver-serverless
service: tla-resolver-serverless
provider:
  name: aws
  region: us-east-1
  runtime: java17
  timeout: 10
  environment:
    TLA_TABLE_NAME: tla-resolver-table-dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - !GetAtt TLADynamoDBTable.Arn

package:
  artifact: target/tla-resolver-serverless-1.2-SNAPSHOT-aws.jar

resources:
  Resources:
    TLADynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "name"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "name"
            KeyType: "HASH"
        TableName: ${self:provider.environment.TLA_TABLE_NAME}
    AcceptTLARule:
      Type: AWS::Events::Rule
      Properties:
        EventBusName: !ImportValue TLAEventBusName
        EventPattern:
          source:
            - "TLAManager"
          detail-type:
            - "AcceptTla"
        Name: accept-tla-rule-1
        Targets:
          - Arn: !GetAtt 
              - AcceptTlaLambdaFunction
              - Arn
            Id: accept_tla
    PermissionInvokeLambda: 
      Type: AWS::Lambda::Permission
      Properties: 
          FunctionName: !Ref "AcceptTlaLambdaFunction"
          Action: "lambda:InvokeFunction"
          Principal: "events.amazonaws.com"
          SourceArn: !GetAtt
                  - "AcceptTLARule"
                  - "Arn"

functions:
  readAllTlaGroups:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getAllTLAGroupsHandler
    events:
      - httpApi:
          path: /tlas
          method: get
  readAllTlas:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getAllTLAsHandler
    events:
      - httpApi:
          path: /tlas/all/{name}
          method: get
  readTlaGroupByName:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getTLAGroupByNameHandler
    events:
      - httpApi:
          path: /tlas/{groupName}
          method: get
  acceptTla:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: acceptTLAHandler     
  seedDatabase:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: databaseSeedHandler
